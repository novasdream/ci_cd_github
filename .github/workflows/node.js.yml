# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    
    - name: Generate deployment package
      run: zip -r deploy.zip * .[^.]* -x "**node_modules**"
    
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACEESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy AWS EBS Application
      uses: betterchalk/ebs-deploy@v1
      with:
        # EBS app name (e.g. myapp)
        ebs-app-name: 
        # EBS environment name (e.g. myapp-env)
        ebs-environment-name: 
        # Name of S3 bucket to store app package (e.g. myapp-bucket)
        s3-bucket: 
        # File name for app when stored in S3 (e.g. myapp-v0.1.0.zip)
        s3-key: 
        # AWS region for the EBS app (e.g. us-east-2)
        aws-region: 
        # The location of the bundled app file (e.g. ./myapp.zip)
        file-path: 
        # Unique string to use as app version label (e.g. myapp-v0.1.0)
        version-label: 
        # Max duration to wait for AWS to pre-process and validate the environment manifest (env.yaml) and configuration files (*.config files in the .ebextensions folder) in the source bundle (if any). Value is in seconds (e.g. 300 - which means 5mins)
        process-timeout: # optional, default is 300
